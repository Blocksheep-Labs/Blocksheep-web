export default [
  {
    type: "constructor",
    inputs: [
      { name: "_underlying", type: "address", internalType: "address" },
      { name: "owner", type: "address", internalType: "address" },
      { name: "_cost", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "COST",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UNDERLYING",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IERC20" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addGameName",
    inputs: [{ name: "gameName", type: "string", internalType: "string" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addQuestion",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BlockSheep.QuestionInfo",
        components: [
          { name: "content", type: "string", internalType: "string" },
          { name: "answers", type: "string[]", internalType: "string[]" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addQuestions",
    inputs: [
      {
        name: "_questions",
        type: "tuple[]",
        internalType: "struct BlockSheep.QuestionInfo[]",
        components: [
          { name: "content", type: "string", internalType: "string" },
          { name: "answers", type: "string[]", internalType: "string[]" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addRace",
    inputs: [
      { name: "name", type: "string", internalType: "string" },
      { name: "startAt", type: "uint64", internalType: "uint64" },
      {
        name: "games",
        type: "tuple[]",
        internalType: "struct BlockSheep.GameParams[]",
        components: [
          { name: "gameId", type: "uint256", internalType: "uint256" },
          { name: "questionIds", type: "uint256[]", internalType: "uint256[]" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balances",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "distributeReward",
    inputs: [
      { name: "raceId", type: "uint256", internalType: "uint256" },
      { name: "gameIndex", type: "uint8", internalType: "uint8" },
      { name: "qIndex", type: "uint8", internalType: "uint8" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "feeCollected",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getGameNames",
    inputs: [{ name: "id", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getQuestions",
    inputs: [{ name: "id", type: "uint256", internalType: "uint256" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct BlockSheep.QuestionInfo",
        components: [
          { name: "content", type: "string", internalType: "string" },
          { name: "answers", type: "string[]", internalType: "string[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaceStatus",
    inputs: [{ name: "raceId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint8", internalType: "enum BlockSheep.RaceStatus" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaces",
    inputs: [{ name: "id", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "name", type: "string", internalType: "string" },
      { name: "startAt", type: "uint64", internalType: "uint64" },
      { name: "numOfGames", type: "uint8", internalType: "uint8" },
      { name: "numOfQuestions", type: "uint8", internalType: "uint8" },
      { name: "playersCount", type: "uint8", internalType: "uint8" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRacesWithPagination",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "from", type: "uint256", internalType: "uint256" },
      { name: "to", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct BlockSheep.RaceInfo[]",
        components: [
          { name: "name", type: "string", internalType: "string" },
          { name: "startAt", type: "uint64", internalType: "uint64" },
          { name: "numOfGames", type: "uint8", internalType: "uint8" },
          { name: "numOfQuestions", type: "uint8", internalType: "uint8" },
          { name: "playersCount", type: "uint8", internalType: "uint8" },
          { name: "registered", type: "bool", internalType: "bool" },
          { name: "status", type: "uint8", internalType: "enum BlockSheep.RaceStatus" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getScoreAtGameOfUser",
    inputs: [
      { name: "raceId", type: "uint256", internalType: "uint256" },
      { name: "gameIndex", type: "uint256", internalType: "uint256" },
      { name: "user", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextRaceId",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "questions",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "content", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "register",
    inputs: [{ name: "raceId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "submitAnswer",
    inputs: [
      { name: "raceId", type: "uint256", internalType: "uint256" },
      { name: "gameIndex", type: "uint8", internalType: "uint8" },
      { name: "qIndex", type: "uint8", internalType: "uint8" },
      { name: "aId", type: "uint8", internalType: "uint8" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
      { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [{ name: "target", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "AlreadyAnswered", inputs: [] },
  { type: "error", name: "AlreadyDistributed", inputs: [] },
  { type: "error", name: "AlreadyRegistered", inputs: [] },
  { type: "error", name: "EmptyQuestions", inputs: [] },
  { type: "error", name: "FailedInnerCall", inputs: [] },
  { type: "error", name: "InvalidGameIndex", inputs: [] },
  { type: "error", name: "InvalidRaceId", inputs: [] },
  { type: "error", name: "InvalidTimestamp", inputs: [] },
  { type: "error", name: "LengthMismatch", inputs: [] },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "RaceIsFull", inputs: [] },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
  },
  { type: "error", name: "Timeout", inputs: [] },
] as const;